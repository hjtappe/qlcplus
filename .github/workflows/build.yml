name: QLCplus Github Actions CI Build

on: ["push", "pull_request"]

jobs:
  build:
    runs-on: ubuntu-20.04
    name: QLCplus ${{matrix.task}}
    strategy:
      fail-fast: false
      matrix:
        task: [compile-qt5, compile-qt5qml]
          #, coverage-qt5 \
    env:
      CI_REPO_SLUG: ${{ github.repository }} 
      CI_BRANCH: ${{ github.head_ref }} 
      CI_PULL_REQUEST: ${{ github.event.number }}
      CC: gcc
      CXX: g++
      PACKAGES_BASE:
        gdb
        libasound2-dev
        libusb-1.0-0-dev
        libftdi1-dev
        shared-mime-info
        libudev-dev
        libmad0-dev
        libsndfile1-dev
        liblo-dev
        libfftw3-dev
        libgl1-mesa-dev
        libxml2-utils
        python3-lxml
        python-is-python3
        xvfb
        ccache
      PACKAGES_QT5_BASE:
        qt514-meta-minimal
        qt514script
        qt514multimedia
        qt514serialport
      PACKAGES_QML_BASE:
        libpulse-dev
        qt514-meta-minimal
        qt514declarative
        qt514quickcontrols2
        qt5143d
        qt514svg
        qt514multimedia
        qt514serialport
      PACKAGES_COVERAGE_BASE:
        lcov

    steps:
      - uses: actions/checkout@v2.5.0
        with:
          submodules: false

      - name: Set ENV variables
        run: |
          echo "CI_BRANCH=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')" >> $GITHUB_ENV
          echo "CI_SECURE_ENV_VARS=$(if [ -z "${{ secrets.something }}" ]; then echo "false"; else echo "true"; fi)" >> $GITHUB_ENV
          echo "CI_EVENT_TYPE=$(if [ "schedule" == "${{ github.event_name }}" ]; then echo "cron"; else echo "${{ github.event_name }}"; fi)" >> $GITHUB_ENV
          echo "PACKAGES_QT5=$(echo ${PACKAGES_BASE} ${PACKAGES_QT5_BASE})" >> $GITHUB_ENV
          echo "PACKAGES_QML=$(echo ${PACKAGES_BASE} ${PACKAGES_QML_BASE})" >> $GITHUB_ENV
          echo "PACKAGES_COVERAGE=$(echo ${PACKAGES_BASE} ${PACKAGES_QT5_BASE} ${PACKAGES_COVERAGE_BASE})" >> $GITHUB_ENV
          echo "PACKAGES_ALL=$(echo ${PACKAGES_BASE} ${PACKAGES_QT5_BASE} ${PACKAGES_QML_BASE} ${PACKAGES_COVERAGE_BASE})" >> $GITHUB_ENV
          echo "NPROC=$(nproc)" >> $GITHUB_ENV
          echo "TASK=$(echo "${{matrix.task}}" | awk 'BEGIN { FS = "-" } ; { print $1 }')" >> $GITHUB_ENV
          echo "QT=${QT:-$(echo "${{matrix.task}}" | awk 'BEGIN { FS = "-" } ; { print $2 }')}" >> $GITHUB_ENV

      - name: Print ENV vars 
        run: |
          echo "CI_BRANCH: ${CI_BRANCH}"
          echo "CI_PULL_REQUEST: ${CI_PULL_REQUEST}"
          echo "CI_REPO_SLUG: ${CI_REPO_SLUG}"
          echo "CI_EVENT_TYPE: ${CI_EVENT_TYPE}"
          echo "CI_SECURE_ENV_VARS: ${CI_SECURE_ENV_VARS}"
          echo "PACKAGES_QT5: ${PACKAGES_QT5}"
          echo "PACKAGES_QML: ${PACKAGES_QML}"
          echo "PACKAGES_COVERAGE: ${PACKAGES_COVERAGE}"
          echo "TASK: ${TASK}"
          echo "QT: ${QT}"
          echo "NPROC: ${NPROC}"

      - name: Register additional package repositories
        run: |
          sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-add-repository -y ppa:beineri/opt-qt-5.14.2-focal

      - uses: awalsh128/cache-apt-pkgs-action@v1.1.1
        with:
          packages: ${PACKAGES_ALL}
          version: ${{runner.os}}-apt

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          update_packager_index: false
          install_ccache: false
          ccache_options: |
            max_size=2G
            compression=false

      - name: Build and Test
        shell: bash
        run: |
          xvfb-run ./.build-ci.sh
          
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage/coverage.info
        if: startsWith(${{matrix.task}}, 'coverage')

      - name: Statistics
        shell: bash
        run: |
          ccache -s
